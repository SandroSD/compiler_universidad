Terminals unused in grammar

   PUNTO
   IGUAL
   CONCATENAR_STR


Gramática

    0 $accept: programa $end

    1 $@1: /* vacío */

    2 programa: PROGRAM $@1 est_declaracion algoritmo

    3 $@2: /* vacío */

    4 programa: PROGRAM $@2 algoritmo

    5 $@3: /* vacío */

    6 est_declaracion: est_declaracion VAR $@3 declaraciones ENDVAR

    7 $@4: /* vacío */

    8 est_declaracion: est_declaracion VAR $@4 ENDVAR

    9 $@5: /* vacío */

   10 est_declaracion: VAR $@5 ENDVAR

   11 $@6: /* vacío */

   12 est_declaracion: VAR $@6 declaraciones ENDVAR

   13 declaraciones: tipo_dato DOS_PUNTOS lista_variables

   14 $@7: /* vacío */

   15 declaraciones: tipo_dato DOS_PUNTOS lista_variables $@7 declaraciones

   16 tipo_dato: C_A tipos C_C

   17 tipos: tipo
   18      | tipo COMA tipos

   19 tipo: INTEGER
   20     | FLOAT
   21     | STRING
   22     | REAL

   23 lista_variables: C_A listas C_C

   24 listas: ID
   25       | ID COMA listas

   26 $@8: /* vacío */

   27 algoritmo: BEGINP $@8 bloque ENDP

   28 bloque: sentencia
   29       | sentencia bloque

   30 sentencia: ciclo
   31          | seleccion
   32          | asignacion
   33          | i_o
   34          | ciclo_especial

   35 $@9: /* vacío */

   36 i_o: READ $@9 ID

   37 $@10: /* vacío */

   38 i_o: WRITE $@10 ID

   39 $@11: /* vacío */

   40 i_o: WRITE $@11 CTE_STR

   41 $@12: /* vacío */

   42 ciclo: WHILE $@12 P_A condicion P_C DO bloque ENDWHILE

   43 asignacion: ID OP_ASIG expresion

   44 $@13: /* vacío */

   45 ciclo_especial: WHILE $@13 ID IN lista_exp_ce DO bloque ENDWHILE

   46 lista_exp_ce: C_A factor_ce C_C

   47 factor_ce: factor
   48          | factor COMA factor_ce

   49 seleccion: principio_if ENDIF
   50          | principio_if ELSE bloque ENDIF

   51 $@14: /* vacío */

   52 principio_if: IF $@14 P_A condicion P_C THEN bloque

   53 condicion: comparacion
   54          | comparacion op_log comparacion

   55 op_log: AND
   56       | OR

   57 comparacion: comp
   58            | NOT comp

   59 comp: expresion op_comparacion expresion

   60 op_comparacion: OP_COMP_MEN
   61               | OP_COMP_MAY
   62               | OP_COMP_IGUAL
   63               | OP_COMP_MENIG
   64               | OP_COMP_MAYIG
   65               | OP_COMP_DIST

   66 expresion: termino
   67          | expresion op_sum_res termino

   68 fib: FIB P_A CTE_INT P_C

   69 op_sum_res: SIGNO_MAS
   70           | SIGNO_MENOS

   71 termino: factor
   72        | termino op_mult_div factor

   73 op_mult_div: SIGNO_POR
   74            | SIGNO_DIV

   75 factor: ID
   76       | CTE_INT
   77       | CTE_REAL
   78       | CTE_STR
   79       | P_A expresion P_C
   80       | fib


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
PROGRAM (258) 2 4
VAR (259) 6 8 10 12
ENDVAR (260) 6 8 10 12
BEGINP (261) 27
ENDP (262) 27
REAL (263) 22
INTEGER (264) 19
STRING (265) 21
FLOAT (266) 20
DO (267) 42 45
WHILE (268) 42 45
IN (269) 45
ENDWHILE (270) 42 45
IF (271) 52
THEN (272) 52
ELSE (273) 50
ENDIF (274) 49 50
FIB (275) 68
CTE_STR (276) 40 78
DOS_PUNTOS (277) 13 15
PUNTO (278)
COMA (279) 18 25 48
IGUAL (280)
OP_COMP_IGUAL (281) 62
OP_COMP_DIST (282) 65
OP_COMP_MEN (283) 60
OP_COMP_MAY (284) 61
OP_COMP_MENIG (285) 63
OP_COMP_MAYIG (286) 64
OP_ASIG (287) 43
CONCATENAR_STR (288)
SIGNO_MAS (289) 69
SIGNO_MENOS (290) 70
SIGNO_POR (291) 73
SIGNO_DIV (292) 74
WRITE (293) 38 40
READ (294) 36
P_A (295) 42 52 68 79
P_C (296) 42 52 68 79
C_A (297) 16 23 46
C_C (298) 16 23 46
AND (299) 55
OR (300) 56
NOT (301) 58
ID (302) 24 25 36 38 43 45 75
CTE_INT (303) 68 76
CTE_REAL (304) 77


No terminales con las reglas donde aparecen

$accept (50)
    en la izquierda: 0
programa (51)
    en la izquierda: 2 4, en la derecha: 0
$@1 (52)
    en la izquierda: 1, en la derecha: 2
$@2 (53)
    en la izquierda: 3, en la derecha: 4
est_declaracion (54)
    en la izquierda: 6 8 10 12, en la derecha: 2 6 8
$@3 (55)
    en la izquierda: 5, en la derecha: 6
$@4 (56)
    en la izquierda: 7, en la derecha: 8
$@5 (57)
    en la izquierda: 9, en la derecha: 10
$@6 (58)
    en la izquierda: 11, en la derecha: 12
declaraciones (59)
    en la izquierda: 13 15, en la derecha: 6 12 15
$@7 (60)
    en la izquierda: 14, en la derecha: 15
tipo_dato (61)
    en la izquierda: 16, en la derecha: 13 15
tipos (62)
    en la izquierda: 17 18, en la derecha: 16 18
tipo (63)
    en la izquierda: 19 20 21 22, en la derecha: 17 18
lista_variables (64)
    en la izquierda: 23, en la derecha: 13 15
listas (65)
    en la izquierda: 24 25, en la derecha: 23 25
algoritmo (66)
    en la izquierda: 27, en la derecha: 2 4
$@8 (67)
    en la izquierda: 26, en la derecha: 27
bloque (68)
    en la izquierda: 28 29, en la derecha: 27 29 42 45 50 52
sentencia (69)
    en la izquierda: 30 31 32 33 34, en la derecha: 28 29
i_o (70)
    en la izquierda: 36 38 40, en la derecha: 33
$@9 (71)
    en la izquierda: 35, en la derecha: 36
$@10 (72)
    en la izquierda: 37, en la derecha: 38
$@11 (73)
    en la izquierda: 39, en la derecha: 40
ciclo (74)
    en la izquierda: 42, en la derecha: 30
$@12 (75)
    en la izquierda: 41, en la derecha: 42
asignacion (76)
    en la izquierda: 43, en la derecha: 32
ciclo_especial (77)
    en la izquierda: 45, en la derecha: 34
$@13 (78)
    en la izquierda: 44, en la derecha: 45
lista_exp_ce (79)
    en la izquierda: 46, en la derecha: 45
factor_ce (80)
    en la izquierda: 47 48, en la derecha: 46 48
seleccion (81)
    en la izquierda: 49 50, en la derecha: 31
principio_if (82)
    en la izquierda: 52, en la derecha: 49 50
$@14 (83)
    en la izquierda: 51, en la derecha: 52
condicion (84)
    en la izquierda: 53 54, en la derecha: 42 52
op_log (85)
    en la izquierda: 55 56, en la derecha: 54
comparacion (86)
    en la izquierda: 57 58, en la derecha: 53 54
comp (87)
    en la izquierda: 59, en la derecha: 57 58
op_comparacion (88)
    en la izquierda: 60 61 62 63 64 65, en la derecha: 59
expresion (89)
    en la izquierda: 66 67, en la derecha: 43 59 67 79
fib (90)
    en la izquierda: 68, en la derecha: 80
op_sum_res (91)
    en la izquierda: 69 70, en la derecha: 67
termino (92)
    en la izquierda: 71 72, en la derecha: 66 67 72
op_mult_div (93)
    en la izquierda: 73 74, en la derecha: 72
factor (94)
    en la izquierda: 75 76 77 78 79 80, en la derecha: 47 48 71 72


estado 0

    0 $accept: . programa $end

    PROGRAM  desplazar e ir al estado 1

    programa  ir al estado 2


estado 1

    2 programa: PROGRAM . $@1 est_declaracion algoritmo
    4         | PROGRAM . $@2 algoritmo

    BEGINP    reduce usando la regla 3 ($@2)
    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 3
    $@2  ir al estado 4


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 5


estado 3

    2 programa: PROGRAM $@1 . est_declaracion algoritmo

    VAR  desplazar e ir al estado 6

    est_declaracion  ir al estado 7


estado 4

    4 programa: PROGRAM $@2 . algoritmo

    BEGINP  desplazar e ir al estado 8

    algoritmo  ir al estado 9


estado 5

    0 $accept: programa $end .

    $default  aceptar


estado 6

   10 est_declaracion: VAR . $@5 ENDVAR
   12                | VAR . $@6 declaraciones ENDVAR

    C_A       reduce usando la regla 11 ($@6)
    $default  reduce usando la regla 9 ($@5)

    $@5  ir al estado 10
    $@6  ir al estado 11


estado 7

    2 programa: PROGRAM $@1 est_declaracion . algoritmo
    6 est_declaracion: est_declaracion . VAR $@3 declaraciones ENDVAR
    8                | est_declaracion . VAR $@4 ENDVAR

    VAR     desplazar e ir al estado 12
    BEGINP  desplazar e ir al estado 8

    algoritmo  ir al estado 13


estado 8

   27 algoritmo: BEGINP . $@8 bloque ENDP

    $default  reduce usando la regla 26 ($@8)

    $@8  ir al estado 14


estado 9

    4 programa: PROGRAM $@2 algoritmo .

    $default  reduce usando la regla 4 (programa)


estado 10

   10 est_declaracion: VAR $@5 . ENDVAR

    ENDVAR  desplazar e ir al estado 15


estado 11

   12 est_declaracion: VAR $@6 . declaraciones ENDVAR

    C_A  desplazar e ir al estado 16

    declaraciones  ir al estado 17
    tipo_dato      ir al estado 18


estado 12

    6 est_declaracion: est_declaracion VAR . $@3 declaraciones ENDVAR
    8                | est_declaracion VAR . $@4 ENDVAR

    ENDVAR    reduce usando la regla 7 ($@4)
    $default  reduce usando la regla 5 ($@3)

    $@3  ir al estado 19
    $@4  ir al estado 20


estado 13

    2 programa: PROGRAM $@1 est_declaracion algoritmo .

    $default  reduce usando la regla 2 (programa)


estado 14

   27 algoritmo: BEGINP $@8 . bloque ENDP

    WHILE  desplazar e ir al estado 21
    IF     desplazar e ir al estado 22
    WRITE  desplazar e ir al estado 23
    READ   desplazar e ir al estado 24
    ID     desplazar e ir al estado 25

    bloque          ir al estado 26
    sentencia       ir al estado 27
    i_o             ir al estado 28
    ciclo           ir al estado 29
    asignacion      ir al estado 30
    ciclo_especial  ir al estado 31
    seleccion       ir al estado 32
    principio_if    ir al estado 33


estado 15

   10 est_declaracion: VAR $@5 ENDVAR .

    $default  reduce usando la regla 10 (est_declaracion)


estado 16

   16 tipo_dato: C_A . tipos C_C

    REAL     desplazar e ir al estado 34
    INTEGER  desplazar e ir al estado 35
    STRING   desplazar e ir al estado 36
    FLOAT    desplazar e ir al estado 37

    tipos  ir al estado 38
    tipo   ir al estado 39


estado 17

   12 est_declaracion: VAR $@6 declaraciones . ENDVAR

    ENDVAR  desplazar e ir al estado 40


estado 18

   13 declaraciones: tipo_dato . DOS_PUNTOS lista_variables
   15              | tipo_dato . DOS_PUNTOS lista_variables $@7 declaraciones

    DOS_PUNTOS  desplazar e ir al estado 41


estado 19

    6 est_declaracion: est_declaracion VAR $@3 . declaraciones ENDVAR

    C_A  desplazar e ir al estado 16

    declaraciones  ir al estado 42
    tipo_dato      ir al estado 18


estado 20

    8 est_declaracion: est_declaracion VAR $@4 . ENDVAR

    ENDVAR  desplazar e ir al estado 43


estado 21

   42 ciclo: WHILE . $@12 P_A condicion P_C DO bloque ENDWHILE
   45 ciclo_especial: WHILE . $@13 ID IN lista_exp_ce DO bloque ENDWHILE

    ID        reduce usando la regla 44 ($@13)
    $default  reduce usando la regla 41 ($@12)

    $@12  ir al estado 44
    $@13  ir al estado 45


estado 22

   52 principio_if: IF . $@14 P_A condicion P_C THEN bloque

    $default  reduce usando la regla 51 ($@14)

    $@14  ir al estado 46


estado 23

   38 i_o: WRITE . $@10 ID
   40    | WRITE . $@11 CTE_STR

    CTE_STR   reduce usando la regla 39 ($@11)
    $default  reduce usando la regla 37 ($@10)

    $@10  ir al estado 47
    $@11  ir al estado 48


estado 24

   36 i_o: READ . $@9 ID

    $default  reduce usando la regla 35 ($@9)

    $@9  ir al estado 49


estado 25

   43 asignacion: ID . OP_ASIG expresion

    OP_ASIG  desplazar e ir al estado 50


estado 26

   27 algoritmo: BEGINP $@8 bloque . ENDP

    ENDP  desplazar e ir al estado 51


estado 27

   28 bloque: sentencia .
   29       | sentencia . bloque

    WHILE  desplazar e ir al estado 21
    IF     desplazar e ir al estado 22
    WRITE  desplazar e ir al estado 23
    READ   desplazar e ir al estado 24
    ID     desplazar e ir al estado 25

    $default  reduce usando la regla 28 (bloque)

    bloque          ir al estado 52
    sentencia       ir al estado 27
    i_o             ir al estado 28
    ciclo           ir al estado 29
    asignacion      ir al estado 30
    ciclo_especial  ir al estado 31
    seleccion       ir al estado 32
    principio_if    ir al estado 33


estado 28

   33 sentencia: i_o .

    $default  reduce usando la regla 33 (sentencia)


estado 29

   30 sentencia: ciclo .

    $default  reduce usando la regla 30 (sentencia)


estado 30

   32 sentencia: asignacion .

    $default  reduce usando la regla 32 (sentencia)


estado 31

   34 sentencia: ciclo_especial .

    $default  reduce usando la regla 34 (sentencia)


estado 32

   31 sentencia: seleccion .

    $default  reduce usando la regla 31 (sentencia)


estado 33

   49 seleccion: principio_if . ENDIF
   50          | principio_if . ELSE bloque ENDIF

    ELSE   desplazar e ir al estado 53
    ENDIF  desplazar e ir al estado 54


estado 34

   22 tipo: REAL .

    $default  reduce usando la regla 22 (tipo)


estado 35

   19 tipo: INTEGER .

    $default  reduce usando la regla 19 (tipo)


estado 36

   21 tipo: STRING .

    $default  reduce usando la regla 21 (tipo)


estado 37

   20 tipo: FLOAT .

    $default  reduce usando la regla 20 (tipo)


estado 38

   16 tipo_dato: C_A tipos . C_C

    C_C  desplazar e ir al estado 55


estado 39

   17 tipos: tipo .
   18      | tipo . COMA tipos

    COMA  desplazar e ir al estado 56

    $default  reduce usando la regla 17 (tipos)


estado 40

   12 est_declaracion: VAR $@6 declaraciones ENDVAR .

    $default  reduce usando la regla 12 (est_declaracion)


estado 41

   13 declaraciones: tipo_dato DOS_PUNTOS . lista_variables
   15              | tipo_dato DOS_PUNTOS . lista_variables $@7 declaraciones

    C_A  desplazar e ir al estado 57

    lista_variables  ir al estado 58


estado 42

    6 est_declaracion: est_declaracion VAR $@3 declaraciones . ENDVAR

    ENDVAR  desplazar e ir al estado 59


estado 43

    8 est_declaracion: est_declaracion VAR $@4 ENDVAR .

    $default  reduce usando la regla 8 (est_declaracion)


estado 44

   42 ciclo: WHILE $@12 . P_A condicion P_C DO bloque ENDWHILE

    P_A  desplazar e ir al estado 60


estado 45

   45 ciclo_especial: WHILE $@13 . ID IN lista_exp_ce DO bloque ENDWHILE

    ID  desplazar e ir al estado 61


estado 46

   52 principio_if: IF $@14 . P_A condicion P_C THEN bloque

    P_A  desplazar e ir al estado 62


estado 47

   38 i_o: WRITE $@10 . ID

    ID  desplazar e ir al estado 63


estado 48

   40 i_o: WRITE $@11 . CTE_STR

    CTE_STR  desplazar e ir al estado 64


estado 49

   36 i_o: READ $@9 . ID

    ID  desplazar e ir al estado 65


estado 50

   43 asignacion: ID OP_ASIG . expresion

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    expresion  ir al estado 72
    fib        ir al estado 73
    termino    ir al estado 74
    factor     ir al estado 75


estado 51

   27 algoritmo: BEGINP $@8 bloque ENDP .

    $default  reduce usando la regla 27 (algoritmo)


estado 52

   29 bloque: sentencia bloque .

    $default  reduce usando la regla 29 (bloque)


estado 53

   50 seleccion: principio_if ELSE . bloque ENDIF

    WHILE  desplazar e ir al estado 21
    IF     desplazar e ir al estado 22
    WRITE  desplazar e ir al estado 23
    READ   desplazar e ir al estado 24
    ID     desplazar e ir al estado 25

    bloque          ir al estado 76
    sentencia       ir al estado 27
    i_o             ir al estado 28
    ciclo           ir al estado 29
    asignacion      ir al estado 30
    ciclo_especial  ir al estado 31
    seleccion       ir al estado 32
    principio_if    ir al estado 33


estado 54

   49 seleccion: principio_if ENDIF .

    $default  reduce usando la regla 49 (seleccion)


estado 55

   16 tipo_dato: C_A tipos C_C .

    $default  reduce usando la regla 16 (tipo_dato)


estado 56

   18 tipos: tipo COMA . tipos

    REAL     desplazar e ir al estado 34
    INTEGER  desplazar e ir al estado 35
    STRING   desplazar e ir al estado 36
    FLOAT    desplazar e ir al estado 37

    tipos  ir al estado 77
    tipo   ir al estado 39


estado 57

   23 lista_variables: C_A . listas C_C

    ID  desplazar e ir al estado 78

    listas  ir al estado 79


estado 58

   13 declaraciones: tipo_dato DOS_PUNTOS lista_variables .
   15              | tipo_dato DOS_PUNTOS lista_variables . $@7 declaraciones

    C_A       reduce usando la regla 14 ($@7)
    $default  reduce usando la regla 13 (declaraciones)

    $@7  ir al estado 80


estado 59

    6 est_declaracion: est_declaracion VAR $@3 declaraciones ENDVAR .

    $default  reduce usando la regla 6 (est_declaracion)


estado 60

   42 ciclo: WHILE $@12 P_A . condicion P_C DO bloque ENDWHILE

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    NOT       desplazar e ir al estado 81
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    condicion    ir al estado 82
    comparacion  ir al estado 83
    comp         ir al estado 84
    expresion    ir al estado 85
    fib          ir al estado 73
    termino      ir al estado 74
    factor       ir al estado 75


estado 61

   45 ciclo_especial: WHILE $@13 ID . IN lista_exp_ce DO bloque ENDWHILE

    IN  desplazar e ir al estado 86


estado 62

   52 principio_if: IF $@14 P_A . condicion P_C THEN bloque

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    NOT       desplazar e ir al estado 81
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    condicion    ir al estado 87
    comparacion  ir al estado 83
    comp         ir al estado 84
    expresion    ir al estado 85
    fib          ir al estado 73
    termino      ir al estado 74
    factor       ir al estado 75


estado 63

   38 i_o: WRITE $@10 ID .

    $default  reduce usando la regla 38 (i_o)


estado 64

   40 i_o: WRITE $@11 CTE_STR .

    $default  reduce usando la regla 40 (i_o)


estado 65

   36 i_o: READ $@9 ID .

    $default  reduce usando la regla 36 (i_o)


estado 66

   68 fib: FIB . P_A CTE_INT P_C

    P_A  desplazar e ir al estado 88


estado 67

   78 factor: CTE_STR .

    $default  reduce usando la regla 78 (factor)


estado 68

   79 factor: P_A . expresion P_C

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    expresion  ir al estado 89
    fib        ir al estado 73
    termino    ir al estado 74
    factor     ir al estado 75


estado 69

   75 factor: ID .

    $default  reduce usando la regla 75 (factor)


estado 70

   76 factor: CTE_INT .

    $default  reduce usando la regla 76 (factor)


estado 71

   77 factor: CTE_REAL .

    $default  reduce usando la regla 77 (factor)


estado 72

   43 asignacion: ID OP_ASIG expresion .
   67 expresion: expresion . op_sum_res termino

    SIGNO_MAS    desplazar e ir al estado 90
    SIGNO_MENOS  desplazar e ir al estado 91

    $default  reduce usando la regla 43 (asignacion)

    op_sum_res  ir al estado 92


estado 73

   80 factor: fib .

    $default  reduce usando la regla 80 (factor)


estado 74

   66 expresion: termino .
   72 termino: termino . op_mult_div factor

    SIGNO_POR  desplazar e ir al estado 93
    SIGNO_DIV  desplazar e ir al estado 94

    $default  reduce usando la regla 66 (expresion)

    op_mult_div  ir al estado 95


estado 75

   71 termino: factor .

    $default  reduce usando la regla 71 (termino)


estado 76

   50 seleccion: principio_if ELSE bloque . ENDIF

    ENDIF  desplazar e ir al estado 96


estado 77

   18 tipos: tipo COMA tipos .

    $default  reduce usando la regla 18 (tipos)


estado 78

   24 listas: ID .
   25       | ID . COMA listas

    COMA  desplazar e ir al estado 97

    $default  reduce usando la regla 24 (listas)


estado 79

   23 lista_variables: C_A listas . C_C

    C_C  desplazar e ir al estado 98


estado 80

   15 declaraciones: tipo_dato DOS_PUNTOS lista_variables $@7 . declaraciones

    C_A  desplazar e ir al estado 16

    declaraciones  ir al estado 99
    tipo_dato      ir al estado 18


estado 81

   58 comparacion: NOT . comp

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    comp       ir al estado 100
    expresion  ir al estado 85
    fib        ir al estado 73
    termino    ir al estado 74
    factor     ir al estado 75


estado 82

   42 ciclo: WHILE $@12 P_A condicion . P_C DO bloque ENDWHILE

    P_C  desplazar e ir al estado 101


estado 83

   53 condicion: comparacion .
   54          | comparacion . op_log comparacion

    AND  desplazar e ir al estado 102
    OR   desplazar e ir al estado 103

    $default  reduce usando la regla 53 (condicion)

    op_log  ir al estado 104


estado 84

   57 comparacion: comp .

    $default  reduce usando la regla 57 (comparacion)


estado 85

   59 comp: expresion . op_comparacion expresion
   67 expresion: expresion . op_sum_res termino

    OP_COMP_IGUAL  desplazar e ir al estado 105
    OP_COMP_DIST   desplazar e ir al estado 106
    OP_COMP_MEN    desplazar e ir al estado 107
    OP_COMP_MAY    desplazar e ir al estado 108
    OP_COMP_MENIG  desplazar e ir al estado 109
    OP_COMP_MAYIG  desplazar e ir al estado 110
    SIGNO_MAS      desplazar e ir al estado 90
    SIGNO_MENOS    desplazar e ir al estado 91

    op_comparacion  ir al estado 111
    op_sum_res      ir al estado 92


estado 86

   45 ciclo_especial: WHILE $@13 ID IN . lista_exp_ce DO bloque ENDWHILE

    C_A  desplazar e ir al estado 112

    lista_exp_ce  ir al estado 113


estado 87

   52 principio_if: IF $@14 P_A condicion . P_C THEN bloque

    P_C  desplazar e ir al estado 114


estado 88

   68 fib: FIB P_A . CTE_INT P_C

    CTE_INT  desplazar e ir al estado 115


estado 89

   67 expresion: expresion . op_sum_res termino
   79 factor: P_A expresion . P_C

    SIGNO_MAS    desplazar e ir al estado 90
    SIGNO_MENOS  desplazar e ir al estado 91
    P_C          desplazar e ir al estado 116

    op_sum_res  ir al estado 92


estado 90

   69 op_sum_res: SIGNO_MAS .

    $default  reduce usando la regla 69 (op_sum_res)


estado 91

   70 op_sum_res: SIGNO_MENOS .

    $default  reduce usando la regla 70 (op_sum_res)


estado 92

   67 expresion: expresion op_sum_res . termino

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    fib      ir al estado 73
    termino  ir al estado 117
    factor   ir al estado 75


estado 93

   73 op_mult_div: SIGNO_POR .

    $default  reduce usando la regla 73 (op_mult_div)


estado 94

   74 op_mult_div: SIGNO_DIV .

    $default  reduce usando la regla 74 (op_mult_div)


estado 95

   72 termino: termino op_mult_div . factor

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    fib     ir al estado 73
    factor  ir al estado 118


estado 96

   50 seleccion: principio_if ELSE bloque ENDIF .

    $default  reduce usando la regla 50 (seleccion)


estado 97

   25 listas: ID COMA . listas

    ID  desplazar e ir al estado 78

    listas  ir al estado 119


estado 98

   23 lista_variables: C_A listas C_C .

    $default  reduce usando la regla 23 (lista_variables)


estado 99

   15 declaraciones: tipo_dato DOS_PUNTOS lista_variables $@7 declaraciones .

    $default  reduce usando la regla 15 (declaraciones)


estado 100

   58 comparacion: NOT comp .

    $default  reduce usando la regla 58 (comparacion)


estado 101

   42 ciclo: WHILE $@12 P_A condicion P_C . DO bloque ENDWHILE

    DO  desplazar e ir al estado 120


estado 102

   55 op_log: AND .

    $default  reduce usando la regla 55 (op_log)


estado 103

   56 op_log: OR .

    $default  reduce usando la regla 56 (op_log)


estado 104

   54 condicion: comparacion op_log . comparacion

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    NOT       desplazar e ir al estado 81
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    comparacion  ir al estado 121
    comp         ir al estado 84
    expresion    ir al estado 85
    fib          ir al estado 73
    termino      ir al estado 74
    factor       ir al estado 75


estado 105

   62 op_comparacion: OP_COMP_IGUAL .

    $default  reduce usando la regla 62 (op_comparacion)


estado 106

   65 op_comparacion: OP_COMP_DIST .

    $default  reduce usando la regla 65 (op_comparacion)


estado 107

   60 op_comparacion: OP_COMP_MEN .

    $default  reduce usando la regla 60 (op_comparacion)


estado 108

   61 op_comparacion: OP_COMP_MAY .

    $default  reduce usando la regla 61 (op_comparacion)


estado 109

   63 op_comparacion: OP_COMP_MENIG .

    $default  reduce usando la regla 63 (op_comparacion)


estado 110

   64 op_comparacion: OP_COMP_MAYIG .

    $default  reduce usando la regla 64 (op_comparacion)


estado 111

   59 comp: expresion op_comparacion . expresion

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    expresion  ir al estado 122
    fib        ir al estado 73
    termino    ir al estado 74
    factor     ir al estado 75


estado 112

   46 lista_exp_ce: C_A . factor_ce C_C

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    factor_ce  ir al estado 123
    fib        ir al estado 73
    factor     ir al estado 124


estado 113

   45 ciclo_especial: WHILE $@13 ID IN lista_exp_ce . DO bloque ENDWHILE

    DO  desplazar e ir al estado 125


estado 114

   52 principio_if: IF $@14 P_A condicion P_C . THEN bloque

    THEN  desplazar e ir al estado 126


estado 115

   68 fib: FIB P_A CTE_INT . P_C

    P_C  desplazar e ir al estado 127


estado 116

   79 factor: P_A expresion P_C .

    $default  reduce usando la regla 79 (factor)


estado 117

   67 expresion: expresion op_sum_res termino .
   72 termino: termino . op_mult_div factor

    SIGNO_POR  desplazar e ir al estado 93
    SIGNO_DIV  desplazar e ir al estado 94

    $default  reduce usando la regla 67 (expresion)

    op_mult_div  ir al estado 95


estado 118

   72 termino: termino op_mult_div factor .

    $default  reduce usando la regla 72 (termino)


estado 119

   25 listas: ID COMA listas .

    $default  reduce usando la regla 25 (listas)


estado 120

   42 ciclo: WHILE $@12 P_A condicion P_C DO . bloque ENDWHILE

    WHILE  desplazar e ir al estado 21
    IF     desplazar e ir al estado 22
    WRITE  desplazar e ir al estado 23
    READ   desplazar e ir al estado 24
    ID     desplazar e ir al estado 25

    bloque          ir al estado 128
    sentencia       ir al estado 27
    i_o             ir al estado 28
    ciclo           ir al estado 29
    asignacion      ir al estado 30
    ciclo_especial  ir al estado 31
    seleccion       ir al estado 32
    principio_if    ir al estado 33


estado 121

   54 condicion: comparacion op_log comparacion .

    $default  reduce usando la regla 54 (condicion)


estado 122

   59 comp: expresion op_comparacion expresion .
   67 expresion: expresion . op_sum_res termino

    SIGNO_MAS    desplazar e ir al estado 90
    SIGNO_MENOS  desplazar e ir al estado 91

    $default  reduce usando la regla 59 (comp)

    op_sum_res  ir al estado 92


estado 123

   46 lista_exp_ce: C_A factor_ce . C_C

    C_C  desplazar e ir al estado 129


estado 124

   47 factor_ce: factor .
   48          | factor . COMA factor_ce

    COMA  desplazar e ir al estado 130

    $default  reduce usando la regla 47 (factor_ce)


estado 125

   45 ciclo_especial: WHILE $@13 ID IN lista_exp_ce DO . bloque ENDWHILE

    WHILE  desplazar e ir al estado 21
    IF     desplazar e ir al estado 22
    WRITE  desplazar e ir al estado 23
    READ   desplazar e ir al estado 24
    ID     desplazar e ir al estado 25

    bloque          ir al estado 131
    sentencia       ir al estado 27
    i_o             ir al estado 28
    ciclo           ir al estado 29
    asignacion      ir al estado 30
    ciclo_especial  ir al estado 31
    seleccion       ir al estado 32
    principio_if    ir al estado 33


estado 126

   52 principio_if: IF $@14 P_A condicion P_C THEN . bloque

    WHILE  desplazar e ir al estado 21
    IF     desplazar e ir al estado 22
    WRITE  desplazar e ir al estado 23
    READ   desplazar e ir al estado 24
    ID     desplazar e ir al estado 25

    bloque          ir al estado 132
    sentencia       ir al estado 27
    i_o             ir al estado 28
    ciclo           ir al estado 29
    asignacion      ir al estado 30
    ciclo_especial  ir al estado 31
    seleccion       ir al estado 32
    principio_if    ir al estado 33


estado 127

   68 fib: FIB P_A CTE_INT P_C .

    $default  reduce usando la regla 68 (fib)


estado 128

   42 ciclo: WHILE $@12 P_A condicion P_C DO bloque . ENDWHILE

    ENDWHILE  desplazar e ir al estado 133


estado 129

   46 lista_exp_ce: C_A factor_ce C_C .

    $default  reduce usando la regla 46 (lista_exp_ce)


estado 130

   48 factor_ce: factor COMA . factor_ce

    FIB       desplazar e ir al estado 66
    CTE_STR   desplazar e ir al estado 67
    P_A       desplazar e ir al estado 68
    ID        desplazar e ir al estado 69
    CTE_INT   desplazar e ir al estado 70
    CTE_REAL  desplazar e ir al estado 71

    factor_ce  ir al estado 134
    fib        ir al estado 73
    factor     ir al estado 124


estado 131

   45 ciclo_especial: WHILE $@13 ID IN lista_exp_ce DO bloque . ENDWHILE

    ENDWHILE  desplazar e ir al estado 135


estado 132

   52 principio_if: IF $@14 P_A condicion P_C THEN bloque .

    $default  reduce usando la regla 52 (principio_if)


estado 133

   42 ciclo: WHILE $@12 P_A condicion P_C DO bloque ENDWHILE .

    $default  reduce usando la regla 42 (ciclo)


estado 134

   48 factor_ce: factor COMA factor_ce .

    $default  reduce usando la regla 48 (factor_ce)


estado 135

   45 ciclo_especial: WHILE $@13 ID IN lista_exp_ce DO bloque ENDWHILE .

    $default  reduce usando la regla 45 (ciclo_especial)
